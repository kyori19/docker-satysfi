name: Build specific version

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version to build
        required: true
        type: string
      latest:
        description: Mark as latest
        required: false
        default: false
        type: boolean
  repository_dispatch:
    types: [build]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - id: report-version
        name: Report version
        run: |
          echo "::set-output name=version::${{ github.event.inputs.version || github.event.client_payload.version }}"
          echo "::set-output name=latest::${{ github.event.inputs.latest || github.event.client_payload.latest }}"

      - name: Ensure inputs
        run: |
          if [ -z "${{ steps.report-version.outputs.version }}" ]; then
            echo "Missing version input"
            exit 1
          fi
          if [ -z "${{ steps.report-version.outputs.latest }}" ]; then
            echo "Missing latest input"
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v2

      - uses: docker/setup-qemu-action@v2

      - id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: meta
        name: Prepare metadata
        uses: docker/metadata-action@v4
        with:
          images: kyori/satysfi
          flavor: latest=${{ steps.report-version.outputs.latest }}
          tags: type=raw,value=${{ steps.report-version.outputs.version }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          builder: ${{ steps.buildx.outputs.name }}
          build-args: VERSION=${{ steps.report-version.outputs.version }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
